version: 2.1

jobs:
  check_git_branch_triggers:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - run:
          name: Determine git branches
          command: |
            git ls-remote --heads origin | awk '{print $2}' | sed 's/refs\/heads\///g' | grep -F 'patch' > BranchList.txt
            curl --request GET \
              --header "Circle-Token: $CIRCLE_TOKEN" \
              --header "Accept: application/json"   \
              --url 'https://circleci.com/api/v2/project/gh/klsember/test-gcp-orbs/schedule' > schedulelist.json
            export result=$(jq '.items[]' schedulelist.json)

            for i in $(cat BranchList.txt | tr -d '[]"' | tr , '\n'); do
              export branchName="$i"
              export existingresult=$(jq '.items[].parameters.branch' schedulelist.json | grep -w -q $branchName && echo "true" || echo "false" )
              if [[ $existingresult == false ]]; then
                export scheduletemplate='{
                      "name": "%s Scheduled Job",
                      "timetable": {
                          "per-hour": 1,
                          "hours-of-day": [
                              1
                          ],
                          "days-of-week": [
                              "TUE"
                          ]
                      },
                      "attribution-actor": "current",
                      "parameters": {
                          "deploy_prod": true,
                          "branch": "%s"
                      },
                      "description": "string"
                    }'
                export definedschedule=$(printf "$scheduletemplate" "$branchName" "$branchName")
                curl --request POST \
                  --url https://circleci.com/api/v2/project/gh/klsember/test-gcp-orbs/schedule \
                  --header "Circle-Token: $CIRCLE_TOKEN" \
                  --header 'Content-Type: application/json' \
                  --data "$definedschedule"
              else
                echo "A schedule already exists for this branch"
              fi
            done;


workflows:
  build_job:
    jobs:
      - check_git_branch_triggers:
          context:
            - api_context
      